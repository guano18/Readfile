/**
 * 
 * This file was automatically generated by the Repast Simphony Agent Editor.
 * Please see http://repast.sourceforge.net/ for details.
 * 
 */

/**
 *
 * Set the package name.
 *
 */
package bin.Appliances

/**
 *
 * Import the needed packages.
 *
 */
import java.io.*
import java.math.*
import java.util.*
import javax.measure.unit.*
import org.jscience.mathematics.number.*
import org.jscience.mathematics.vector.*
import org.jscience.physics.amount.*
import repast.simphony.adaptation.neural.*
import repast.simphony.adaptation.regression.*
import repast.simphony.context.*
import repast.simphony.context.space.continuous.*
import repast.simphony.context.space.gis.*
import repast.simphony.context.space.graph.*
import repast.simphony.context.space.grid.*
import repast.simphony.engine.environment.*
import repast.simphony.engine.schedule.*
import repast.simphony.engine.watcher.*
import repast.simphony.groovy.math.*
import repast.simphony.integration.*
import repast.simphony.matlab.link.*
import repast.simphony.query.*
import repast.simphony.query.space.continuous.*
import repast.simphony.query.space.gis.*
import repast.simphony.query.space.graph.*
import repast.simphony.query.space.grid.*
import repast.simphony.query.space.projection.*
import repast.simphony.parameter.*
import repast.simphony.random.*
import repast.simphony.space.continuous.*
import repast.simphony.space.gis.*
import repast.simphony.space.graph.*
import repast.simphony.space.grid.*
import repast.simphony.space.projection.*
import repast.simphony.ui.probe.*
import repast.simphony.util.*
import simphony.util.messages.*
import static java.lang.Math.*
import static repast.simphony.essentials.RepastEssentials.*
import test.*
import java.util.Vector

/**
 *
 * This is an agent.
 *
 */
public class Appliance  {

    /**
     *
     * This is an agent property.
     * @field name
     *
     */
    @Parameter (displayName = "Name", usageName = "name")
    public String getName() {
        return name
    }
    public void setName(String newValue) {
        name = newValue
    }
    public String name = ""

    /**
     *
     * This is an agent property.
     * @field saturation
     *
     */
    @Parameter (displayName = "Saturation", usageName = "saturation")
    public float getSaturation() {
        return saturation
    }
    public void setSaturation(float newValue) {
        saturation = newValue
    }
    public float saturation = 0

    /**
     *
     * This is an agent property.
     * @field consumptionShare
     *
     */
    @Parameter (displayName = "Consumption Share", usageName = "consumptionShare")
    public float getConsumptionShare() {
        return consumptionShare
    }
    public void setConsumptionShare(float newValue) {
        consumptionShare = newValue
    }
    public float consumptionShare = 0

    /**
     *
     * This is an agent property.
     * @field baseLoadShare
     *
     */
    @Parameter (displayName = "Base Load Share", usageName = "baseLoadShare")
    public float getBaseLoadShare() {
        return baseLoadShare
    }
    public void setBaseLoadShare(float newValue) {
        baseLoadShare = newValue
    }
    public float baseLoadShare = 0

    /**
     *
     * This is an agent property.
     * @field power
     *
     */
    @Parameter (displayName = "Power", usageName = "power")
    public int getPower() {
        return power
    }
    public void setPower(int newValue) {
        power = newValue
    }
    public int power = 0

    /**
     *
     * This is an agent property.
     * @field cycleDuration
     *
     */
    @Parameter (displayName = "Cycle Duration", usageName = "cycleDuration")
    public int getCycleDuration() {
        return cycleDuration
    }
    public void setCycleDuration(int newValue) {
        cycleDuration = newValue
    }
    public int cycleDuration = 0

    /**
     *
     * This is an agent property.
     * @field od
     *
     */
    @Parameter (displayName = "Occupancy Dependence", usageName = "od")
    public boolean getOd() {
        return od
    }
    public void setOd(boolean newValue) {
        od = newValue
    }
    public boolean od = 0

    /**
     *
     * This is an agent property.
     * @field inUse
     *
     */
    @Parameter (displayName = "In Use", usageName = "inUse")
    public boolean getInUse() {
        return inUse
    }
    public void setInUse(boolean newValue) {
        inUse = newValue
    }
    public boolean inUse = 0

    /**
     *
     * This is an agent property.
     * @field probabilitySeason
     *
     */
    @Parameter (displayName = "Probability Season", usageName = "probabilitySeason")
    public HashMap getProbabilitySeason() {
        return probabilitySeason
    }
    public void setProbabilitySeason(HashMap newValue) {
        probabilitySeason = newValue
    }
    public HashMap probabilitySeason = null

    /**
     *
     * This is an agent property.
     * @field probabilityWeekday
     *
     */
    @Parameter (displayName = "Probability Weekday", usageName = "probabilityWeekday")
    public HashMap getProbabilityWeekday() {
        return probabilityWeekday
    }
    public void setProbabilityWeekday(HashMap newValue) {
        probabilityWeekday = newValue
    }
    public HashMap probabilityWeekday = null

    /**
     *
     * This is an agent property.
     * @field probabilityDaytime
     *
     */
    @Parameter (displayName = "Probability Daytime", usageName = "probabilityDaytime")
    public HashMap getProbabilityDaytime() {
        return probabilityDaytime
    }
    public void setProbabilityDaytime(HashMap newValue) {
        probabilityDaytime = newValue
    }
    public HashMap probabilityDaytime = null

    /**
     *
     * This is an agent property.
     * @field operationVector
     *
     */
    @Parameter (displayName = "Operation Vector", usageName = "operationVector")
    public Vector getOperationVector() {
        return operationVector
    }
    public void setOperationVector(Vector newValue) {
        operationVector = newValue
    }
    public Vector operationVector = new Vector()

    /**
     *
     * This is an agent property.
     * @field loadVector
     *
     */
    @Parameter (displayName = "Load Vector", usageName = "loadVector")
    public Vector getLoadVector() {
        return loadVector
    }
    public void setLoadVector(Vector newValue) {
        loadVector = newValue
    }
    public Vector loadVector = new Vector()

    /**
     *
     * This is an agent property.
     * @field memberOf
     *
     */
    @Parameter (displayName = "Member Of", usageName = "memberOf")
    public HouseHold getMemberOf() {
        return memberOf
    }
    public void setMemberOf(HouseHold newValue) {
        memberOf = newValue
    }
    public HouseHold memberOf = null

    /**
     *
     * This is an agent property.
     * @field dailyOperation
     *
     */
    @Parameter (displayName = "Daily Operation", usageName = "dailyOperation")
    public Vector getDailyOperation() {
        return dailyOperation
    }
    public void setDailyOperation(Vector newValue) {
        dailyOperation = newValue
    }
    public Vector dailyOperation = new Vector()

    /**
     *
     * This is an agent property.
     * @field weeklyOperation
     *
     */
    @Parameter (displayName = "Weekly Operation", usageName = "weeklyOperation")
    public Vector getWeeklyOperation() {
        return weeklyOperation
    }
    public void setWeeklyOperation(Vector newValue) {
        weeklyOperation = newValue
    }
    public Vector weeklyOperation = new Vector(7)

    /**
     *
     * This is an agent property.
     * @field weeklyLoadVector
     *
     */
    @Parameter (displayName = "Weekly Load Vector", usageName = "weeklyLoadVector")
    public Vector getWeeklyLoadVector() {
        return weeklyLoadVector
    }
    public void setWeeklyLoadVector(Vector newValue) {
        weeklyLoadVector = newValue
    }
    public Vector weeklyLoadVector = new Vector(7)

    /**
     *
     * This is an agent property.
     * @field times
     *
     */
    @Parameter (displayName = "Times of Weekly Function", usageName = "times")
    public int getTimes() {
        return times
    }
    public void setTimes(int newValue) {
        times = newValue
    }
    public int times = 0

    /**
     *
     * This value is used to automatically generate agent identifiers.
     * @field serialVersionUID
     *
     */
    private static final long serialVersionUID = 1L

    /**
     *
     * This value is used to automatically generate agent identifiers.
     * @field agentIDCounter
     *
     */
    protected static long agentIDCounter = 1

    /**
     *
     * This value is the agent's identifier.
     * @field agentID
     *
     */
    protected String agentID = "Appliance " + (agentIDCounter++)

    /**
     *
     * This is the step behavior.
     * @method createOperationVector
     *
     */
    public Vector createOperationVector(int times) {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method getProbability
     *
     */
    public float getProbability(String season, String day, int hour) {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        float pseason = (float) probabilitySeason.get(season);
        float pday = (float) probabilityWeekday.get(day);
        float phour = (float) probabilityDaytime.get(hour);
        // This is a task.
        returnValue = pseason * pday * phour
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method initialize
     *
     */
    public def initialize() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method shiftingOperation
     *
     */
    public Vector shiftingOperation(Vector v) {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method fillDay
     *
     */
    public HashMap fillDay(float sunday, float workingday, float saturday) {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        HashMap hm = new HashMap();
        hm.put("Saturday", new Float(saturday));
        hm.put("Sunday", new Float(sunday));
        // This is a task.
        hm.put("Monday", new Float(workingday));
        hm.put("Tuesday", new Float(workingday));
        hm.put("Wednesday", new Float(workingday));
        hm.put("Thursday", new Float(workingday));
        hm.put("Friday", new Float(workingday));
        // This is a task.
        returnValue = hm
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method fillSeason
     *
     */
    public HashMap fillSeason(float summer, float winter, float transition) {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        HashMap hm = new HashMap();
        hm.put("Winter", new Float(winter));
        hm.put("Transition", new Float(transition));
        hm.put("Summer", new Float(summer));
        returnValue = hm
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method fillHour
     *
     */
    public def fillHour() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method showStatus
     *
     */
    public def showStatus() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        System.out.println("Name = " + name)
        System.out.println("Member Of = " + getMemberOf().getName())
        System.out.println("Saturation = " + saturation)
        System.out.println("Consumption Share = " + consumptionShare)
        System.out.println("Base Load Share = " + baseLoadShare)
        // This is a task.
        System.out.println("Power = " + power)
        System.out.println("Cycle Duration = "+ cycleDuration)
        System.out.println("Occupancy Dependence = "+ od)
        System.out.println("In Use = " + inUse)
        // This is a task.
        Set set = probabilitySeason.entrySet();
        Iterator it = set.iterator();
        System.out.println("Probability Season = ")

        // This is a loop.
        while (it.hasNext()) {

            // This is a task.
            Map.Entry me = (Map.Entry)it.next();
            System.out.println(me.getKey() + " : " + me.getValue() );

        }

        // This is a task.
        set = probabilityWeekday.entrySet();
        it = set.iterator();
        System.out.println("Probability Weekday = ")

        // This is a loop.
        while (it.hasNext()) {

            // This is a task.
            Map.Entry me = (Map.Entry)it.next();
            System.out.println(me.getKey() + " : " + me.getValue() );

        }

        // This is a task.
        System.out.println("Weekly Operation Vector = ")

        // This is a loop.
        for (int i = 0; i < 7;i++) {

            // This is a task.
            System.out.println("Day " + (i))
            ListIterator iter =operationVector.get(i).listIterator();

            // This is a loop.
            for (int j = 0;j < 96; j++) {

                // This is a task.
                System.out.println("Quarter : " + (j+1) + "  " + iter.next())

            }


        }

        // This is a task.
        System.out.println("Weekly Operation Vector and Load = ")

        // This is a loop.
        for (int i = 0; i < 7;i++) {

            // This is a task.
            System.out.println("Day " + (i))
            ListIterator iter = weeklyOperation.get(i).listIterator();
            ListIterator iter2 = weeklyLoadVector.get(i).listIterator();

            // This is a loop.
            for (int j = 0;j < 96; j++) {

                // This is a task.
                System.out.println("Quarter " + (j+1) + " = " + iter.next() + "   Load = " + iter2.next())

            }


        }

        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method fillDailyFunction
     *
     */
    public def fillDailyFunction() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This is the step behavior.
     * @method refresh
     *
     */
    public def refresh() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // This is a task.
        // Return the results.
        return returnValue

    }

    /**
     *
     * This method provides a human-readable name for the agent.
     * @method toString
     *
     */
    @ProbeID()
    public String toString() {

        // Define the return value variable.
        def returnValue

        // Note the simulation time.
        def time = GetTickCountInTimeUnits()

        // Set the default agent identifier.
        returnValue = this.agentID
        // Return the results.
        return returnValue

    }


}

